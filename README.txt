//------------------------------------------------------------------------------

Документация: 

//------------------------------------------------------------------------------

Команды терминала

Установка:
npm i

Запуск режима разработчика (c запуском сервера)
npm run dev

Запуск сборки проекта (без запуска сервера, только финальная сборка)
npm run build

Запуск сборки проекта и выгрузка результата на сервер по FTP. (без запуска локальконо сервера)
Конфигурация FTP находится в файле config/gulp-settings.js
npm run deploy

Запуск сборки проекта и создание zip архива с именем проекта. (без запуска локальконо сервера)
npm run zip

Запуск сборки проекта но без создания webp картинок. (без запуска сервера, только финальная сборка)
npm run devbuild

Запуск создания SVG спрайта, иконки нужно положить в папку src/svgicons,
готовый спрайт появится в папке dist/img/icons/icons.svg
(не входит в работу по умолчанию, при необходимости запустить командой)
npm run sprite

//------------------------------------------------------------------------------

Основные файлы для работы с шаблоном:
js/app.js
scss/style.scss

index.html - разводящая страница (содержание)
home.html - главная страница
файлы html/*.htm - подключаемые части

//------------------------------------------------------------------------------

Используются псевдонимы пути к папкам:
@img = src/img
@scss = src/scss
@js = src/js

Плагин для VS Code - Path Autocomplete
Настройки. Нажать в реждакторе F1, найти настройки Settings JSON, добавить код:
"path-autocomplete.pathMappings": {
	"@img": "${folder}/src/img", // псевдоним для папки img
	"@scss": "${folder}/src/scss", // псевдоним для папки scss
	"@js": "${folder}/src/js", //  псевдоним для папки js
}

//------------------------------------------------------------------------------

При возникновении ошибок убедитесь что:
1) У вас установлен Node.js последней версии
2) Терминал открыт с правами администратора
3) В названиях папок на всем пути к проекту нет символа # или !
4) Папки и файлы должны быть названы латиницей без пробелов
5) Тег img и его содержимое должны быть записаны в одну строку без переносов
6) В атрибуте src должен быть указан путь к существующей картинке

//------------------------------------------------------------------------------

Прочие проблемы и их решения:
//-----------------------------------
Ошибка node-sass.
Решения:
npm rebuild node-sass
и/или
npm install sass gulp-sass --save-dev
//-----------------------------------
Ошибка Python
Решени:
npm install --global windows-build-tools
//------------------------------------------------------------------------------

rating

//
"столкнулся с подобной проблемой. Связана насколько я понял с проверкой версии Node на Windows 7, не поддерживаются последние версии. Танцевал с бубном, решил подобным образом: 
1. Скачал версию 14.15.1 (https://nodejs.org/dist/v14.15.1/), в Zip архиве. 
2. Заходим в папку с установленным NodeJS, распаковываем содержимое архива в папку, с заменой файлов. 
3. Далее идем сюда "Панель управления" =&gt; "Система" =&gt; "Дополнительные параметры системы" =&gt; "Дополнительно" =&gt; "Переменные среды" 
4. В Системных переменных "Создать" переменную с именем 'NODE_SKIP_PLATFORM_CHECK' и присваиваем ей значение '1'. 
5. Перезапускаем систему, и запускаем шаблон согласно инструкции от Евгения. 

?? Почему-то класс с иконочным шрифтом подключается и работает только в home.html. 
В _header и _footer его не находит.
Ответ: да, это так и есть тут уж настройки редактора, я пока не смог решить

в последней версии шаблона при разработке в режиме npm run dev всё ок,
а при финальной сборке npm run build не отображаются картинки заданные через background 
вообще никакие кроме svg (все пути прописаны верно много раз перепроверил) 
не зависит от вложенности картинка в корне папки img или где поглубже. 
При финальной сборке npm run devbuild всё исправно работает.

+ Селект: Возможность вывода ссылки в опции, отправка формы при выборе элемента
+ GULP: SVG спрайты, Выгрузка проекта по FTP, Изменение работы со шрифтами в Gulp файле. Автоматический font-weight на основе имени файла
+ JS: Галерея картинок (куплена лецензия litegallery за 110$), доработан наблюдатель, модуль "показать еще"
+ SCSS: дописаны стили для radio и checkbox, фрагментация (

если не будет работать imagemin: поставить 7.1.0

еще 
Редактор и терминал всегда с правами админа!!!
1) npm cache clean - очистка npm
2) Перезагрузка
3) Устанавливаем последние версии Nodejs и Python
4) Перезагрузка
5) npm i npm -g - установка npm
7) Ставим gulp глобально npm i gulp-cli -g - установка gulp
8) в новую папку копируем шаблон
9) Установка пакетов  npm i
10) Запуск шаблона 